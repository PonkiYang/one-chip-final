C51 COMPILER V9.60.7.0   LCD1602                                                           12/21/2023 02:04:33 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: D:\DevPrograms\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\LCD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          //引脚配置：
   4          sbit LCD_RS=P2^6;
   5          sbit LCD_RW=P2^5;
   6          sbit LCD_EN=P2^7;
   7          #define LCD_DataPort P0
   8          
   9          //函数定义：
  10          /**
  11            * @brief  LCD1602延时函数，12MHz调用可延时1ms
  12            * @param  无
  13            * @retval 无
  14            */
  15          void LCD_Delay()
  16          {
  17   1              unsigned char i, j;
  18   1      
  19   1              i = 2;
  20   1              j = 239;
  21   1              do
  22   1              {
  23   2                      while (--j);
  24   2              } while (--i);
  25   1      }
  26          
  27          /**
  28            * @brief  LCD1602写命令
  29            * @param  Command 要写入的命令
  30            * @retval 无
  31            */
  32          void LCD_WriteCommand(unsigned char Command)
  33          {
  34   1              LCD_RS=0;
  35   1              LCD_RW=0;
  36   1              LCD_DataPort=Command;
  37   1              LCD_EN=1;
  38   1              LCD_Delay();
  39   1              LCD_EN=0;
  40   1              LCD_Delay();
  41   1      }
  42          
  43          /**
  44            * @brief  LCD1602写数据
  45            * @param  Data 要写入的数据
  46            * @retval 无
  47            */
  48          void LCD_WriteData(unsigned char Data)
  49          {
  50   1              LCD_RS=1;
  51   1              LCD_RW=0;
  52   1              LCD_DataPort=Data;
  53   1              LCD_EN=1;
  54   1              LCD_Delay();
C51 COMPILER V9.60.7.0   LCD1602                                                           12/21/2023 02:04:33 PAGE 2   

  55   1              LCD_EN=0;
  56   1              LCD_Delay();
  57   1      }
  58          
  59          /**
  60            * @brief  LCD1602设置光标位置
  61            * @param  Line 行位置，范围：1~2
  62            * @param  Column 列位置，范围：1~16
  63            * @retval 无
  64            */
  65          void LCD_SetCursor(unsigned char Line,unsigned char Column)
  66          {
  67   1              if(Line==1)
  68   1              {
  69   2                      LCD_WriteCommand(0x80|(Column-1));
  70   2              }
  71   1              else if(Line==2)
  72   1              {
  73   2                      LCD_WriteCommand(0x80|(Column-1+0x40));
  74   2              }
  75   1      }
  76          
  77          /**
  78            * @brief  LCD1602初始化函数
  79            * @param  无
  80            * @retval 无
  81            */
  82          void LCD_Init()
  83          {
  84   1              LCD_WriteCommand(0x38);//八位数据接口，两行显示，5*7点阵
  85   1              LCD_WriteCommand(0x0c);//显示开，光标关，闪烁关
  86   1              LCD_WriteCommand(0x06);//数据读写操作后，光标自动加一，画面不动
  87   1              LCD_WriteCommand(0x01);//光标复位，清屏
  88   1      }
  89          
  90          /**
  91            * @brief  在LCD1602指定位置上显示一个字符
  92            * @param  Line 行位置，范围：1~2
  93            * @param  Column 列位置，范围：1~16
  94            * @param  Char 要显示的字符
  95            * @retval 无
  96            */
  97          void LCD_ShowChar(unsigned char Line,unsigned char Column,char Char)
  98          {
  99   1              LCD_SetCursor(Line,Column);
 100   1              LCD_WriteData(Char);
 101   1      }
 102          
 103          /**
 104            * @brief  在LCD1602指定位置开始显示所给字符串
 105            * @param  Line 起始行位置，范围：1~2
 106            * @param  Column 起始列位置，范围：1~16
 107            * @param  String 要显示的字符串
 108            * @retval 无
 109            */
 110          void LCD_ShowString(unsigned char Line,unsigned char Column,char *String)
 111          {
 112   1              unsigned char i;
 113   1              LCD_SetCursor(Line,Column);
 114   1              for(i=0;String[i]!='\0';i++)
 115   1              {
 116   2                      LCD_WriteData(String[i]);
C51 COMPILER V9.60.7.0   LCD1602                                                           12/21/2023 02:04:33 PAGE 3   

 117   2              }
 118   1      }
 119          
 120          /**
 121            * @brief  返回值=X的Y次方
 122            */
 123          int LCD_Pow(int X,int Y)
 124          {
 125   1              unsigned char i;
 126   1              int Result=1;
 127   1              for(i=0;i<Y;i++)
 128   1              {
 129   2                      Result*=X;
 130   2              }
 131   1              return Result;
 132   1      }
 133          
 134          /**
 135            * @brief  在LCD1602指定位置开始显示所给数字
 136            * @param  Line 起始行位置，范围：1~2
 137            * @param  Column 起始列位置，范围：1~16
 138            * @param  Number 要显示的数字，范围：0~65535
 139            * @param  Length 要显示数字的长度，范围：1~5
 140            * @retval 无
 141            */
 142          void LCD_ShowNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 143          {
 144   1              unsigned char i;
 145   1              LCD_SetCursor(Line,Column);
 146   1              for(i=Length;i>0;i--)
 147   1              {
 148   2                      LCD_WriteData(Number/LCD_Pow(10,i-1)%10+'0');
 149   2              }
 150   1      }
 151          
 152          
 153          /**
 154            * @brief  在LCD1602指定位置开始以有符号十进制显示所给数字
 155            * @param  Line 起始行位置，范围：1~2
 156            * @param  Column 起始列位置，范围：1~16
 157            * @param  Number 要显示的数字，范围：-32768~32767
 158            * @param  Length 要显示数字的长度，范围：1~5
 159            * @retval 无
 160            */
 161          void LCD_ShowSignedNum(unsigned char Line,unsigned char Column,int Number,unsigned char Length)
 162          {
 163   1              unsigned char i;
 164   1              unsigned int Number1;
 165   1              LCD_SetCursor(Line,Column);
 166   1              if(Number>=0)
 167   1              {
 168   2                      LCD_WriteData('+');
 169   2                      Number1=Number;
 170   2              }
 171   1              else
 172   1              {
 173   2                      LCD_WriteData('-');
 174   2                      Number1=-Number;
 175   2              }
 176   1              for(i=Length;i>0;i--)
 177   1              {
 178   2                      LCD_WriteData(Number1/LCD_Pow(10,i-1)%10+'0');
C51 COMPILER V9.60.7.0   LCD1602                                                           12/21/2023 02:04:33 PAGE 4   

 179   2              }
 180   1      }
 181          
 182          /**
 183            * @brief  在LCD1602指定位置开始以十六进制显示所给数字
 184            * @param  Line 起始行位置，范围：1~2
 185            * @param  Column 起始列位置，范围：1~16
 186            * @param  Number 要显示的数字，范围：0~0xFFFF
 187            * @param  Length 要显示数字的长度，范围：1~4
 188            * @retval 无
 189            */
 190          void LCD_ShowHexNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 191          {
 192   1              unsigned char i,SingleNumber;
 193   1              LCD_SetCursor(Line,Column);
 194   1              for(i=Length;i>0;i--)
 195   1              {
 196   2                      SingleNumber=Number/LCD_Pow(16,i-1)%16;
 197   2                      if(SingleNumber<10)
 198   2                      {
 199   3                              LCD_WriteData(SingleNumber+'0');
 200   3                      }
 201   2                      else
 202   2                      {
 203   3                              LCD_WriteData(SingleNumber-10+'A');
 204   3                      }
 205   2              }
 206   1      }
 207          
 208          /**
 209            * @brief  在LCD1602指定位置开始以二进制显示所给数字
 210            * @param  Line 起始行位置，范围：1~2
 211            * @param  Column 起始列位置，范围：1~16
 212            * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111
 213            * @param  Length 要显示数字的长度，范围：1~16
 214            * @retval 无
 215            */
 216          void LCD_ShowBinNum(unsigned char Line,unsigned char Column,unsigned int Number,unsigned char Length)
 217          {
 218   1              unsigned char i;
 219   1              LCD_SetCursor(Line,Column);
 220   1              for(i=Length;i>0;i--)
 221   1              {
 222   2                      LCD_WriteData(Number/LCD_Pow(2,i-1)%2+'0');
 223   2              }
 224   1      }
 225          
 226          int countDigits(int num) {  
 227   1          int count = 0;  
 228   1          while (num != 0) {  
 229   2              count++;  
 230   2              num /= 10;  
 231   2          }  
 232   1          return count;  
 233   1      }  
 234          
 235          void LCD_WriteDecimal(unsigned char Line,unsigned char Column, double num){
 236   1              int integerPart = (int)(num);
 237   1              double decimalPart = num - integerPart;  
 238   1              int len = countDigits(integerPart);
 239   1              unsigned char i;
 240   1              int j = 2;                              //      价格保留两位小数
C51 COMPILER V9.60.7.0   LCD1602                                                           12/21/2023 02:04:33 PAGE 5   

 241   1              LCD_SetCursor(Line,Column);
 242   1              
 243   1              // 打印整数段
 244   1              for(i = len;i>0;i--){
 245   2                      LCD_WriteData(integerPart/LCD_Pow(10,i-1)%10+'0');
 246   2              }
 247   1              
 248   1              // 打印小数点
 249   1              LCD_WriteData('.');     
 250   1              
 251   1              // 打印小数段
 252   1              while(j > 0){
 253   2                      int digit = (int)(decimalPart * 10);
 254   2                      LCD_WriteData(digit+'0');
 255   2                      decimalPart = decimalPart*10 - digit;  
 256   2                      j-- ;
 257   2              }
 258   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    658    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      45
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
